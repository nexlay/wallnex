// Mocks generated by Mockito 5.4.0 from annotations
// in wallnex/test/features/images/domain/get_image_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wallnex/core/errors/failure.dart' as _i5;
import 'package:wallnex/features/images/domain/entities/wallpaper.dart' as _i6;

import 'get_image_use_case_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MockImageRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockImageRepo extends _i1.Mock implements _i3.MockImageRepo {
  MockMockImageRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, Iterable<_i6.Wallpaper>>> getWallpapers(
    String? url,
    int? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWallpapers,
          [
            url,
            page,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, Iterable<_i6.Wallpaper>>>.value(
                _FakeEither_0<_i5.Failure, Iterable<_i6.Wallpaper>>(
          this,
          Invocation.method(
            #getWallpapers,
            [
              url,
              page,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, Iterable<_i6.Wallpaper>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Wallpaper>> getTagsAndUploader(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTagsAndUploader,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Wallpaper>>.value(
            _FakeEither_0<_i5.Failure, _i6.Wallpaper>(
          this,
          Invocation.method(
            #getTagsAndUploader,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Wallpaper>>);
}
